Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic17_13 = 1713 -> Microsoft.CodeAnalysis.VisualBasic.LanguageVersion
Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.AddTypeParameterListParameters(ParamArray items As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax()) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.TypeParameterList() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.Update(identifier As Microsoft.CodeAnalysis.SyntaxToken, typeParameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax, equalsToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.WithTypeParameterList(typeParameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.NamespaceOrType() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Update(alias As Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax, namespaceOrType As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.WithNamespaceOrType(namespaceOrType As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing, publicSign As Boolean = False, reportSuppressedDiagnostics As Boolean = False, metadataImportOptions As Microsoft.CodeAnalysis.MetadataImportOptions = Microsoft.CodeAnalysis.MetadataImportOptions.Public, friendAccessibleAssemblyPublicKeys As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, System.Collections.Immutable.ImmutableHashSet(Of System.Collections.Immutable.ImmutableArray(Of Byte)))) = Nothing) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetAliasInfo(semanticModel As Microsoft.CodeAnalysis.SemanticModel, nameSyntax As Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax, cancellationToken As System.Threading.CancellationToken = Nothing) -> Microsoft.CodeAnalysis.AliasInfo
Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeAliasInfo(semanticModel As Microsoft.CodeAnalysis.SemanticModel, position As Integer, nameSyntax As Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax, bindingOption As Microsoft.CodeAnalysis.SpeculativeBindingOption) -> Microsoft.CodeAnalysis.AliasInfo
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportAliasClause(identifier As Microsoft.CodeAnalysis.SyntaxToken, typeParameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportAliasClause(identifier As Microsoft.CodeAnalysis.SyntaxToken, typeParameterList As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax, equalsToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleImportsClause(alias As Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax, namespaceOrType As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleImportsClause(namespaceOrType As Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax
